/*This service interacts with Firebase Realtime Database, 
handling operations related to user data in the database.*/

const firebase = require('firebase/app');
require('firebase/auth');
const db = require('../config/firebase');
const User = require('../models/userModel');

// Initialise firebase with client SDK
const firebaseConfig = {
  apiKey: process.env.FIREBASE_API_KEY,
  authDomain: process.env.FIREBASE_AUTH_DOMAIN,
  projectId: process.env.FIREBASE_PROJECT_ID,
  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.FIREBASE_APP_ID,
};


//Function to get all users
exports.getUsers = async () => {
  const snapshot = await db.ref('users').once('value');
  const users = snapshot.val(); //objects where keys are user IDs and values are user details
  return Object.keys(users).map(key => new User(key, users[key].email, users[key].password, users[key].username));
}; //creates new 'User' object for each user in db to constructor

//Function to add a new user
exports.addUser = async (newUser) => { //newUser is an object created at frontend that will be push
  const userRef = db.ref('users').push(); //creates new unique key, reference to new user location stored in db 
  await userRef.set(newUser); //sets new user values at new user reference in db to 'newUser' object
  return new User(userRef.key, newUser.email, newUser.password, newUser.username);
}; //creates new 'User' object. key generated by 'push', email password username from 'newUser' object